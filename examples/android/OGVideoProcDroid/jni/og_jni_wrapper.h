/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ogles_gpgpu_OGJNIWrapper */

#ifndef _Included_ogles_gpgpu_OGJNIWrapper
#define _Included_ogles_gpgpu_OGJNIWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_NONE
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_NONE -1L
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_STD
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_STD 0L
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_STD_MIRRORED
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_STD_MIRRORED 1L
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_FLIPPED
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_FLIPPED 2L
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_FLIPPED_MIRRORED
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_FLIPPED_MIRRORED 3L
#undef ogles_gpgpu_OGJNIWrapper_ORIENTATION_DIAGONAL
#define ogles_gpgpu_OGJNIWrapper_ORIENTATION_DIAGONAL 4L
#undef ogles_gpgpu_OGJNIWrapper_RENDER_DISP_MODE_INPUT
#define ogles_gpgpu_OGJNIWrapper_RENDER_DISP_MODE_INPUT 0L
#undef ogles_gpgpu_OGJNIWrapper_RENDER_DISP_MODE_OUTPUT
#define ogles_gpgpu_OGJNIWrapper_RENDER_DISP_MODE_OUTPUT 1L
/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    getOutputFrameW
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ogles_1gpgpu_OGJNIWrapper_getOutputFrameW
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    getOutputFrameH
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_ogles_1gpgpu_OGJNIWrapper_getOutputFrameH
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    init
 * Signature: (ZZZ)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_init
(JNIEnv *, jobject, jboolean, jboolean, jboolean);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    prepare
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_prepare
(JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    setRenderDisp
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_setRenderDisp
(JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    setRenderDispShowMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_setRenderDispShowMode
(JNIEnv *, jobject, jint);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    cleanup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_cleanup
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    setInputPixels
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_setInputPixels
(JNIEnv *, jobject, jintArray);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    setInputTexture
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_setInputTexture
(JNIEnv *, jobject, jint);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    process
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_process
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    renderOutput
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ogles_1gpgpu_OGJNIWrapper_renderOutput
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    getOutputPixels
 * Signature: ()Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_ogles_1gpgpu_OGJNIWrapper_getOutputPixels
(JNIEnv *, jobject);

/*
 * Class:     ogles_gpgpu_OGJNIWrapper
 * Method:    getTimeMeasurements
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_ogles_1gpgpu_OGJNIWrapper_getTimeMeasurements
(JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
